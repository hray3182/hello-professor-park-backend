{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for the Hello Professor parking management system.",
        "title": "Hello Professor API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/parking-records": {
            "get": {
                "description": "Get a list of all parking records, with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Get all parking records",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of parking records returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new parking record to the system. This is a general endpoint, for specific entry/exit events, use /parking-records/entry and /parking-records/exit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Create a new parking record",
                "parameters": [
                    {
                        "description": "Parking Record Information",
                        "name": "parking_record_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/entry": {
            "post": {
                "description": "Records when a vehicle enters the parking lot, accepting license plate and an optional image file.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Record a vehicle entry event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle License Plate",
                        "name": "licensePlate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Optional image of the vehicle/license plate",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/exit": {
            "post": {
                "description": "Records when a vehicle exits the parking lot. Checks for payment status.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Record a vehicle exit event",
                "parameters": [
                    {
                        "description": "Vehicle Exit Information (License Plate Only)",
                        "name": "exit_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.SimpleEntryPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "402": {
                        "description": "Payment Required",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponseWithRecord"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/license/{licensePlate}": {
            "get": {
                "description": "Get all parking records associated with a specific License Plate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Get parking records by License Plate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "License Plate",
                        "name": "licensePlate",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/license/{licensePlate}/latest": {
            "get": {
                "description": "Get the most recent parking record for a specific License Plate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Get the latest parking record by License Plate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "License Plate",
                        "name": "licensePlate",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/search/license": {
            "get": {
                "description": "Search all parking records by a partial or full License Plate (case-insensitive)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Search parking records by License Plate (fuzzy search)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "License Plate Query",
                        "name": "q",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ParkingRecord"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/{id}": {
            "get": {
                "description": "Get details of a parking record by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Get a parking record by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of an existing parking record by its ID. Can be used for manual adjustments.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Update an existing parking record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Parking Record Update Information",
                        "name": "parking_record_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ParkingRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a parking record from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Delete a parking record by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/{id}/pay": {
            "post": {
                "description": "Marks a parking record as paid and ideally creates a transaction record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Parking Records"
                ],
                "summary": "Pay for a parking record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment Details",
                        "name": "paymentPayload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ParkingPaymentPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment successful",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ParkingRecordWithTransactionResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request (e.g., validation error, amount mismatch)",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "402": {
                        "description": "Payment required conditions not met (e.g., fee not calculated, already paid, vehicle exited)",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Parking record not found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/{id}/prepare-payment": {
            "post": {
                "description": "Calculates and stores the parking fee if not already calculated for an active parking record. Returns the record with payment details.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Prepare a parking record for payment by calculating/retrieving its fee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully calculated/retrieved fee, record ready for payment",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Record ID or record already exited/paid",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Parking Record not found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/parking-records/{id}/verify-license-plate": {
            "patch": {
                "description": "Allows a user to correct or verify the license plate for an existing parking record.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parking_records"
                ],
                "summary": "Update user-verified license plate for a parking record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Verified License Plate Information",
                        "name": "license_plate_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.VerifyLicensePlatePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ParkingRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/operations/image-attachment-rate": {
            "get": {
                "description": "Calculates the percentage of vehicle entries that have an associated image.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get the rate of parking entries with images",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start time for the report (RFC3339 format, e.g., 2023-01-01T00:00:00Z)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time for the report (RFC3339 format, e.g., 2023-01-31T23:59:59Z)",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ImageAttachmentRateResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid time format",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/parking-lot/available-spots": {
            "get": {
                "description": "Retrieves the total capacity, occupied spots, and available spots in the parking lot.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get available parking spots",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.AvailableSpotsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/revenue/total": {
            "get": {
                "description": "Retrieves the total revenue collected from parking fees.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get total revenue from parking fees within a time range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start time for the report (RFC3339 format, e.g., 2023-01-01T00:00:00Z)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time for the report (RFC3339 format, e.g., 2023-01-31T23:59:59Z)",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.TotalRevenueResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid time format",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/traffic/total-count": {
            "get": {
                "description": "Retrieves the total number of parking events (vehicle entries).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get total parking count within a time range",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start time for the report (RFC3339 format, e.g., 2023-01-01T00:00:00Z)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time for the report (RFC3339 format, e.g., 2023-01-31T23:59:59Z)",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dtos.SuccessResponseWithData"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.TotalParkingCountResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid time format",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "description": "Get a list of all transactions, with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get all transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit number of transactions returned",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new transaction to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "description": "Transaction Information",
                        "name": "transaction_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transactions/parking/{parkingRecordID}": {
            "get": {
                "description": "Get all transactions associated with a specific ParkingRecord ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get transactions by ParkingRecord ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Parking Record ID",
                        "name": "parkingRecordID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "description": "Get details of a transaction by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Get a transaction by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of an existing transaction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Update an existing transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Transaction Update Information",
                        "name": "transaction_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a transaction from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Delete a transaction by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dtos.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AvailableSpotsResponse": {
            "type": "object",
            "properties": {
                "available_spots": {
                    "type": "integer"
                },
                "occupied_spots": {
                    "type": "integer"
                },
                "total_capacity": {
                    "type": "integer"
                }
            }
        },
        "dtos.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string",
                    "example": "Optional additional details"
                },
                "error": {
                    "type": "string",
                    "example": "Detailed error message"
                }
            }
        },
        "dtos.ErrorResponseWithRecord": {
            "type": "object",
            "properties": {
                "calculatedAmount": {
                    "type": "number"
                },
                "entryTime": {
                    "description": "Assuming models.ParkingRecord.EntryTime is time.Time",
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "licensePlate": {
                    "type": "string"
                },
                "parkingRecordID": {
                    "type": "integer"
                },
                "paymentStatus": {
                    "type": "string"
                }
            }
        },
        "dtos.ImageAttachmentRateResponse": {
            "type": "object",
            "properties": {
                "attachment_rate": {
                    "description": "Value between 0.0 and 1.0",
                    "type": "number"
                },
                "entries_with_image": {
                    "type": "integer"
                },
                "total_entries": {
                    "type": "integer"
                }
            }
        },
        "dtos.ParkingPaymentPayload": {
            "type": "object",
            "required": [
                "amountPaid",
                "paymentMethod"
            ],
            "properties": {
                "amountPaid": {
                    "type": "number",
                    "example": 50
                },
                "paymentMethod": {
                    "type": "string",
                    "example": "MobilePay"
                },
                "paymentReference": {
                    "description": "可選，如果前端有來自支付閘道的參考ID或備註",
                    "type": "string",
                    "example": "TXN_REF_123XYZ"
                }
            }
        },
        "dtos.ParkingRecordWithTransactionResponse": {
            "type": "object",
            "properties": {
                "actualDurationMinutes": {
                    "description": "ActualDurationMinutes 實際停車時長（分鐘）",
                    "type": "integer"
                },
                "calculatedAmount": {
                    "description": "CalculatedAmount 應付停車費用",
                    "type": "number"
                },
                "entryTime": {
                    "description": "EntryTime 進場時間",
                    "type": "string"
                },
                "exitTime": {
                    "description": "ExitTime 出場時間，如果尚未出場則為 NULL",
                    "type": "string"
                },
                "image": {
                    "description": "New fields",
                    "type": "string"
                },
                "licensePlate": {
                    "description": "LicensePlate 車牌號碼 (通常來自 OCR)",
                    "type": "string"
                },
                "paymentStatus": {
                    "description": "PaymentStatus 支付狀態：Pending, Paid, Refunded",
                    "type": "string"
                },
                "recordID": {
                    "description": "RecordID 作為主鍵",
                    "type": "integer"
                },
                "sensorEntryID": {
                    "description": "SensorEntryID 入場感應器記錄ID",
                    "type": "string"
                },
                "sensorExitID": {
                    "description": "SensorExitID 出場感應器記錄ID",
                    "type": "string"
                },
                "transaction": {
                    "$ref": "#/definitions/models.Transaction"
                },
                "transactionID": {
                    "description": "TransactionID 關聯到 Transactions 表的外鍵，如果尚未支付或無交易則為 NULL",
                    "type": "integer"
                },
                "userVerifiedLicensePlate": {
                    "description": "UserVerifiedLicensePlate 使用者驗證/修正後的車牌號碼，可以為 NULL",
                    "type": "string"
                }
            }
        },
        "dtos.SimpleEntryPayload": {
            "type": "object",
            "required": [
                "licensePlate"
            ],
            "properties": {
                "licensePlate": {
                    "type": "string",
                    "example": "ABC-1234"
                }
            }
        },
        "dtos.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Operation successful"
                }
            }
        },
        "dtos.SuccessResponseWithData": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "dtos.TotalParkingCountResponse": {
            "type": "object",
            "properties": {
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "dtos.TotalRevenueResponse": {
            "type": "object",
            "properties": {
                "currency": {
                    "description": "e.g., \"TWD\", \"USD\"",
                    "type": "string"
                },
                "total_revenue": {
                    "type": "number"
                }
            }
        },
        "dtos.VerifyLicensePlatePayload": {
            "type": "object",
            "required": [
                "licensePlate"
            ],
            "properties": {
                "licensePlate": {
                    "type": "string",
                    "example": "XYZ-7890"
                }
            }
        },
        "models.ParkingRecord": {
            "type": "object",
            "properties": {
                "actualDurationMinutes": {
                    "description": "ActualDurationMinutes 實際停車時長（分鐘）",
                    "type": "integer"
                },
                "calculatedAmount": {
                    "description": "CalculatedAmount 應付停車費用",
                    "type": "number"
                },
                "entryTime": {
                    "description": "EntryTime 進場時間",
                    "type": "string"
                },
                "exitTime": {
                    "description": "ExitTime 出場時間，如果尚未出場則為 NULL",
                    "type": "string"
                },
                "image": {
                    "description": "New fields",
                    "type": "string"
                },
                "licensePlate": {
                    "description": "LicensePlate 車牌號碼 (通常來自 OCR)",
                    "type": "string"
                },
                "paymentStatus": {
                    "description": "PaymentStatus 支付狀態：Pending, Paid, Refunded",
                    "type": "string"
                },
                "recordID": {
                    "description": "RecordID 作為主鍵",
                    "type": "integer"
                },
                "sensorEntryID": {
                    "description": "SensorEntryID 入場感應器記錄ID",
                    "type": "string"
                },
                "sensorExitID": {
                    "description": "SensorExitID 出場感應器記錄ID",
                    "type": "string"
                },
                "transaction": {
                    "description": "GORM 模型關聯定義\nVehicle     Vehicle     `gorm:\"foreignKey:VehicleID\"` // 移除 Vehicle 關聯",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    ]
                },
                "transactionID": {
                    "description": "TransactionID 關聯到 Transactions 表的外鍵，如果尚未支付或無交易則為 NULL",
                    "type": "integer"
                },
                "userVerifiedLicensePlate": {
                    "description": "UserVerifiedLicensePlate 使用者驗證/修正後的車牌號碼，可以為 NULL",
                    "type": "string"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Amount 交易金額",
                    "type": "number"
                },
                "parkingRecordID": {
                    "description": "ParkingRecordID 關聯到 ParkingRecords 表的外鍵",
                    "type": "integer"
                },
                "paymentGatewayResponse": {
                    "description": "PaymentGatewayResponse 支付閘道回傳的詳細資訊 (JSON或TEXT)",
                    "type": "string"
                },
                "paymentMethod": {
                    "description": "PaymentMethod 付款方式，例如 \"CreditCard\", \"MobilePay\", \"Cash\"",
                    "type": "string"
                },
                "status": {
                    "description": "Status 交易狀態：Success, Failed, Refunded",
                    "type": "string"
                },
                "transactionID": {
                    "description": "TransactionID 作為主鍵",
                    "type": "integer"
                },
                "transactionTime": {
                    "description": "TransactionTime 交易時間",
                    "type": "string"
                }
            }
        }
    }
}